import { Injectable } from '@angular/core'
import {
  AuthChangeEvent,
  AuthSession,
  createClient,
  Session,
  SupabaseClient,
  User,
} from '@supabase/supabase-js'
import { environment } from 'src/environments/environment'
import { Post } from '../community/community.component';

export interface FinanceData {
  id: number;
  userId: string
  data: any
}

@Injectable({
  providedIn: 'root',
})
export class SupabaseService {
  private supabase: SupabaseClient
  _session: AuthSession | null = null

  constructor() {
    this.supabase = createClient(environment.supabaseUrl, environment.supabaseKey)
  }

  get session() {
    this.supabase.auth.getSession().then(({ data }) => {
      this._session = data.session
    })
    return this._session
  }

  getFinanceData(userId: string) {
    // const dbData: any = 
    return this.supabase
      .from('financedata')
      .select(`id, user_id, data`)
      .eq('user_id', userId)
      .single()
  }

  updateFinanceData(data: any) {
    return this.supabase.from('financedata').upsert(data)
  }

  getPosts(): any {
    // return this.supabase.from('posts').select('*')
    // return new Promise((resolve) => {
    //   setTimeout(() => {
    //     resolve({ data: mockPosts });
    //   });
    // });
    return this.supabase
      .from('posts')
      .select(`id, user_id, thread_id,  parent_id, posted_at, subject, message, tags, votes`)
  }

  createPost(post: Post): any {
    return this.supabase.from('posts').upsert(post.toJson())
  }

  updatePost(post: Post): any {
    post.message = 'updated';
    console.log('upsert', post);
    console.log(post.toJson());
    return this.supabase.from('posts').
      update(post.toJson())
      .eq('id', post.id)
  }

  authChanges(callback: (event: AuthChangeEvent, session: Session | null) => void) {
    return this.supabase.auth.onAuthStateChange(callback)
  }

  async signUp(email: string, password: string) {
    return await this.supabase.auth.signUp({
      email: email,
      password: password
    })
  }

  async signIn(email: string, password: string) {
    return await this.supabase.auth.signInWithPassword({
      email: email,
      password: password
    })
  }

  async signOut() {
    return this.supabase.auth.signOut()
  }

  async requestPassword(email: string) {
    return await this.supabase.auth.resetPasswordForEmail(email, {
      redirectTo: 'https://getonyx.co',
    })
  }
}
/*
create table
  posts (
    id bigint generated by default as identity primary key,
    user_id uuid references auth.users not null,
    thread_id bigint,
    parent_id bigint,
    posted_at timestamp with time zone default timezone ('utc'::text, now()) not null,
    subject text,
    message text,
    tags - text,
    votes jsonb,
  );

  alter table posts
  enable row level security;

  create policy "Public profiles are viewable by everyone." on posts
  for select using (true);
*/
const mockPosts = [
  {
    "id": "1",
    "user_id": "aea346eb-b854-456d-b74a-264cd5de7755",
    "thread_id": null,
    "parent_id": null,
    "posted_at": "2023-09-18T21:21:39.257Z",
    "subject": "1st Long Message...",
    "message": "blah de blah ",
    "tags": "debt, credit",
    "votes": {
      "4d66dd8a-d4e5-43b6-8479-2ba60b75fbe0": 1,
      "20f8dd28-a9ae-48e6-9aa1-62788e6f0af1": 1
    }
  },
  {
    "id": "2",
    "user_id": "4d66dd8a-d4e5-43b6-8479-2ba60b75fbe0",
    "thread_id": "1",
    "parent_id": "1",
    "posted_at": "2023-09-18T21:22:39.257Z",
    "subject": null,
    "message": "1st response to msg 1",
    "tags": "debt",
    "votes": { "20f8dd28-a9ae-48e6-9aa1-62788e6f0af1": 1 }
  },
  {
    "id": "3",
    "user_id": "20f8dd28-a9ae-48e6-9aa1-62788e6f0af1",
    "thread_id": "1",
    "parent_id": "1",
    "posted_at": "2023-09-18T21:23:39.257Z",
    "subject": null,
    "message": "2nd response to msg 1",
    "tags": "debt",
    "votes": { "aea346eb-b854-456d-b74a-264cd5de7755": 1 }
  },
  {
    "id": "4",
    "user_id": "aea346eb-b854-456d-b74a-264cd5de7755",
    "thread_id": null,
    "parent_id": null,
    "posted_at": "2023-09-18T21:24:39.257Z",
    "subject": "2nd Long Message...",
    "message": "blah de blah ",
    "tags": "house",
    "votes": { "4d66dd8a-d4e5-43b6-8479-2ba60b75fbe0": 1 }
  },
  {
    "id": "5",
    "user_id": "4d66dd8a-d4e5-43b6-8479-2ba60b75fbe0",
    "thread_id": "4",
    "parent_id": "4",
    "posted_at": "2023-09-18T21:25:39.257Z",
    "subject": null,
    "message": "1st response to msg 4",
    "tags": "house",
    "votes": {}
  },
  {
    "id": "6",
    "user_id": "20f8dd28-a9ae-48e6-9aa1-62788e6f0af1",
    "thread_id": "4",
    "parent_id": "4",
    "posted_at": "2023-09-18T21:26:39.257Z",
    "subject": null,
    "message": "2nd response to msg 4",
    "tags": "house",
    "votes": {}
  },
  {
    "id": "7",
    "user_id": "aea346eb-b854-456d-b74a-264cd5de7755",
    "thread_id": "4",
    "parent_id": "5",
    "posted_at": "2023-09-18T21:27:39.257Z",
    "subject": null,
    "message": "First response to response 5",
    "tags": "house",
    "votes": {}
  }
]